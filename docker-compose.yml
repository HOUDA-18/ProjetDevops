version: '3.8'

services:
  app:
    image: houdachaanbi/houdachaanbi-4twin1-kaddem
    container_name: houdachaanbi-4twin1-kaddem
    build:
      context: .
      dockerfile: Dockerfile  # Optionnel si le fichier s'appelle "Dockerfile"
    ports:
      - "8089:8089"
    environment:
      # ===== Configuration Serveur =====
      SERVER_PORT: 8089
      SERVER_SERVLET_CONTEXT_PATH: /kaddem

      # ===== Configuration H2 Obligatoire =====
      spring_datasource_url:jdbc:h2:file:/opt/app/database/kaddem;DB_CLOSE_ON_EXIT=FALSE;IFEXISTS=FALSE
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.h2.Driver

      # ===== Authentification H2 (Optionnel) =====
      SPRING_DATASOURCE_USERNAME: houda
      SPRING_DATASOURCE_PASSWORD: "123"

      # ===== Console H2 =====
      SPRING_H2_CONSOLE_ENABLED: "true"
      SPRING_H2_CONSOLE_PATH: /h2-console
      SPRING_H2_CONSOLE_SETTINGS_WEB_ALLOW_OTHERS: "true"

      # ===== Configuration JPA/Hibernate =====
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINTS_WEB_BASE_PATH: /actuator
    networks:
      - monitoring-net

  prometheus:
    image: prom/prometheus
    container_name: kaddem-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - app
      - node-exporter-vm
    networks:
      - monitoring-net

  node-exporter-vm:
    image: prom/node-exporter:latest
    container_name: node-exporter-vm
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitoring-net

  grafana:
    image: grafana/grafana:latest
    container_name: kaddem-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 'admin'  # Choisis un mot de passe pour l'admin de Grafana
    depends_on:
      - prometheus
    networks:
      - monitoring-net

volumes:
  grafana-storage:

networks:
  monitoring-net:
    driver: bridge
