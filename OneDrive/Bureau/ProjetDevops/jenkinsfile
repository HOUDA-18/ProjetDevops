pipeline {
    agent any

    tools {
        jdk 'jdk11'
        maven 'M2_HOME'
    }

    environment {
        GIT_CREDENTIALS = 'github-token' // <-- Remplace par l’ID réel de ton token GitHub dans Jenkins
    }

    stages {
        stage('GIT') {
            steps {
                git branch: 'nourhene',
                    credentialsId: 'github-token',
                    url: 'https://github.com/HOUDA-18/ProjetDevops.git'
            }
        }

        stage('Compile Stage') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('MVN Sonarqube') {
            steps {
                sh 'mvn sonar:sonar -Dsonar.token=squ_bbe8b39c70c162231659881639677022f6a332aa -Dmaven.test.skip=true'
            }
        }

        
      stage('MVN Nexus') {
            steps {
                sh 'mvn deploy -Dmaven.test.skip=true'
            }
        }
/*
        stage("MOCKITO") {
            steps {
                sh "mvn test -Dtest=tn.esprit.tpfoyer.TpFoyerApplicationTests"
            }
        }

        stage('Building image') {
            steps {
                sh 'docker build -t wafahidri/timesheet-devops:1.0.0 .'
            }
        }

        stage('Deploy Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                }
                sh 'docker push wafahidri/timesheet-devops:1.0.0'
            }
        }

        stage('Run Docker Compose') {
            steps {
                sh 'docker-compose up -d'
            }
        }
        */
    }
}
