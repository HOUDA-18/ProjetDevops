pipeline {
    agent any
    stages {
        stage('GIT') {
            steps {
                git(
                    branch: 'nourhene', 
                    url: 'https://github.com/HOUDA-18/ProjetDevops.git',
                    credentialsId: 'github-token' // Add this line
                )
            }
        }
/*
        stage('Tests Unitaires') {
            steps {
                sh 'mvn test' 
            }
        }*/
        stage('compile') {
            steps {
                sh 'mvn clean compile'
            }
        }
      stage('MVNSONARQUBE') {
            steps {
                 withSonarQubeEnv('SonarQube') {
                    sh '''
                        mvn clean verify sonar:sonar \
                        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
                    '''
                }
        
        }
    
}/*
        stage('Deploy to Nexus') {
            steps {
                sh 'mvn deploy -Dmaven.test.skip=true'
            }
        }
        //Construction des images Docker
        stage('Build Docker Images') {
            steps {
                sh 'sudo docker compose build'
            }
        }
         // Étape 6 : Authentification à Docker Hub
        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'DOCKER_HUB_CREDENTIALS',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASSWORD'
                )]) {
                    sh '''
                        sudo docker logout
                        echo "${DOCKER_PASSWORD}" | sudo docker login -u "${DOCKER_USER}" --password-stdin
                    '''
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                sh '''
                    sudo docker compose push
                    sudo docker logout
                '''
            }
        }
        
        stage('Deploy with Docker Compose') {
            steps {
                sh 'sudo docker compose down && sudo docker compose up -d'
            }
        }

        // Étape 9 : Vérification du déploiement
        stage('Verify Deployment') {
            steps {
                script {
                    // Réessayer jusqu'à 5 fois, avec une attente de 10 secondes entre chaque tentative
                    retry(5) {
                        sleep 10 // Attendre 10 secondes avant chaque tentative
                        sh 'curl -I http://192.168.163.128:8089/kaddem'
                    }
                }
            }
        }*/
    }
}
