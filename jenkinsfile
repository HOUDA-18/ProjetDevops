pipeline {
    agent any
    stages {
        stage('GIT') {
            steps {
                git(
                    branch: 'khemiriOussema_4twin1_G3', 
                    url: 'https://github.com/HOUDA-18/ProjetDevops.git',
                    credentialsId: 'github-creds'
                )
            }
        }

        stage('Tests Unitaires') {
            steps {
                sh 'mvn test' 
            }
        }
        
        stage('compile') {
            steps {
                sh 'mvn clean compile'
            }
        }
        
        stage('MVN SONARQUBE') {
            steps {
                 withSonarQubeEnv('SonarQube') {
                    sh '''
                        mvn clean verify sonar:sonar \
                        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
                    '''
                }
            }
        }
        
        stage('Deploy to Nexus') {
            steps {
                sh 'mvn deploy -Dmaven.test.skip=true'
            }
        }
        
        // Docker Build Stage
        stage('Build Docker Images') {
            steps {
                sh 'docker compose build --no-cache'
            }
        }
         
        // Docker Hub Authentication
        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'DOCKER_HUB_CREDENTIALS',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASSWORD'
                )]) {
                    sh '''
                        docker logout
                        echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USER}" --password-stdin
                    '''
                }
            }
        }

        // Docker Push Stage
        stage('Push Docker Image') {
            steps {
                sh 'docker compose push'
            }
        }

        // Deployment
        stage('Deploy with Docker Compose') {
            steps {
                sh 'docker compose up -d'
            }
        }
        
        // Verification
        stage('Verify Deployment') {
            steps {
                retry(5) {
                    sleep 10
                    sh 'curl -I http://192.168.163.128:8089/kaddem'
                }
            }
        }
    }
}